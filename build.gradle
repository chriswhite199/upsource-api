plugins {
    id 'java'
    id "de.undercouch.download" version "4.1.1"
}

group 'com.github.chriswhite199'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

def jsonDefDir = file("$buildDir/json-defs")
jsonDefDir.mkdirs()

def generatedSrcDir = file("$buildDir/generated-sources")

def upsourceJsonDefs = [
        'https://upsource.jetbrains.com/~api_doc/json/Analytics.json',
        'https://upsource.jetbrains.com/~api_doc/json/FileOrDirectoryContent.json',
        'https://upsource.jetbrains.com/~api_doc/json/FindUsages.json',
        'https://upsource.jetbrains.com/~api_doc/json/Ids.json',
        'https://upsource.jetbrains.com/~api_doc/json/IssueTrackers.json',
        'https://upsource.jetbrains.com/~api_doc/json/Misc.json',
        'https://upsource.jetbrains.com/~api_doc/json/Projects.json',
        'https://upsource.jetbrains.com/~api_doc/json/Users.json',
        'https://upsource.jetbrains.com/~api_doc/json/Service.json',
]

dependencies {
    implementation group: 'com.squareup', name: 'javapoet', version: '1.13.0'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.11.1'

    testImplementation group: 'junit', name: 'junit', version: '4.12'
}

task downloadJsonFiles(type: Download) {
    src(upsourceJsonDefs)
    dest jsonDefDir
    onlyIfModified true
}

configurations {
    codeGen
}

sourceSets {
    codeGen {
        java.srcDir generatedSrcDir
    }
}

compileCodeGenJava.options.compilerArgs = []

task generateCode(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath

    main = 'com.gihub.chriswhite199.upsourceapi.schema.CodeGenerator'

    // arguments to pass to the application
    args jsonDefDir, generatedSrcDir
}

clean {
    doLast {
        jsonDefDir.deleteDir()
        generatedSrcDir.deleteDir()
    }
}

//sourceSets {
//    main {
//        java.srcDirs += file("$buildDir/generated-sources")
//    }
//}